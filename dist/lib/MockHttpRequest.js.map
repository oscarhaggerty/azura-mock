{"version":3,"sources":["lib/MockHttpRequest.es6"],"names":[],"mappings":";;;;;;;;;;;;;;AAIA,IAAM,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;IAE3C,eAAe;YAAf,eAAe;;AACR,WADP,eAAe,CACP,MAAM,EAAiB;QAAf,QAAQ,yDAAG,EAAE;;0BAD7B,eAAe;;AAEjB,+BAFE,eAAe,6CAET;;AAER,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,QAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,IAAI,KAAK,CAAC;AACxC,QAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,IAAI,EAAE,CAAC;;AAE/B,YAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC;AAC1C,QAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,QAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;AAEtB,UAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,AAAC,GAAG,IAAI;AAC5C,UAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;AAEzD,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9C,CAAC,CAAC;;AAEH,QAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;GAC/B;;eApBG,eAAe;;SAsBT,eAAG;AAAE,aAAO,IAAI,CAAC,OAAO,CAAC;KAAE;;;SAC1B,eAAG;AAAE,aAAO,IAAI,CAAC,QAAQ,CAAC;KAAE;;;SACzB,eAAG;AAAE,aAAO,IAAI,CAAC,WAAW,CAAC;KAAE;;;SACnC,eAAG;AAAE,aAAO,IAAI,CAAC,OAAO,CAAC;KAAE;;;SAC9B,eAAG;AAAE,aAAO,IAAI,CAAC,IAAI,CAAC;KAAE;;;SA1B3B,eAAe;GAAS,aAAa;;AA6B3C,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC","file":"lib/MockHttpRequest.js","sourcesContent":["/**\r\n * A simple mock implementation of Node's http.IncomingMessage.\r\n */\r\n\r\nconst ThroughStream = require('./ThroughStream');\r\n\r\nclass MockHttpRequest extends ThroughStream {\r\n  constructor(socket, httpData = {}) {\r\n    super();\r\n\r\n    this._socket = socket;\r\n    this._method = httpData.method || 'GET';\r\n    this._url = httpData.url || '';\r\n\r\n    httpData.headers = httpData.headers || {};\r\n    this._headers = {};\r\n    this._rawHeaders = [];\r\n\r\n    Object.keys(httpData.headers).forEach((key)=> {\r\n      this._headers[key.toLowerCase()] = httpData.headers[key];\r\n\r\n      this._rawHeaders.push(key);\r\n      this._rawHeaders.push(httpData.headers[key]);\r\n    });\r\n\r\n    this.end(httpData.body || '');\r\n  }\r\n\r\n  get socket() { return this._socket; }\r\n  get headers() { return this._headers; }\r\n  get rawHeaders() { return this._rawHeaders; }\r\n  get method() { return this._method; }\r\n  get url() { return this._url; }\r\n}\r\n\r\nmodule.exports = MockHttpRequest;\r\n"],"sourceRoot":"/source/"}